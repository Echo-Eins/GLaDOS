[project]
name = "glados"
version = "0.1.0"
description = "GLaDOS Voice Assistant"
requires-python = ">=3.12"
dependencies = [
    "sounddevice>=0.5.1",
    "levenshtein>=0.26.1",
    "loguru>=0.7.3",
    "jinja2>=3.1.5",
    "requests>=2.32.3",
    "textual>=1.0.0",
    "pyyaml>=6.0.2",
    "numba>=0.61.0",
    "numpy<2",
    "soundfile>=0.13.0",
    "pydantic>=2.10.6",
    "httpx>=0.28.1",
    "rich>=14.0.0",
    "scipy>=1.11.0",
]

[project.optional-dependencies]
cuda = [
    "onnxruntime-gpu>=1.16.0",
    "torch==2.4.0",
    "torchaudio==2.4.0",
    "torchvision==0.19.0",
]
cpu = [
    "onnxruntime>=1.16.0",
]
dev = [
    "pytest",
    "pytest-anyio",
    "ruff",
    "ipykernel",
    "types-requests",
    "types-PyYAML",
]
api = ["litestar[standard,structlog]>=2.15.1"]
ru = ["gigaam==0.1.0"]
ru-full = [
    "gigaam==0.1.0",
    "librosa>=0.10.0",
    "faiss-cpu>=1.7.4",
    "praat-parselmouth>=0.4.3",
    "pyworld>=0.3.4",
    "torchcrepe>=0.0.20",
    "fairseq>=0.12.2",
]

[project.scripts]
glados = "glados.cli:main"


# Build system
[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# Ruff configuration
[tool.ruff]
# Same as Black
line-length = 120
indent-width = 4

# Enable all rules, including those that replace Black and isort
lint.extend-select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "RUF", # Ruff-specific rules
    "ANN", # Annotation rules
    "PYI", # Type stub rules
]

# Assume Python 3.12
target-version = "py312"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint.isort]
order-by-type = true
force-sort-within-sections = true

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
strict = true

[[tool.uv.index]]
name = "pytorch-cu121"
url = "https://download.pytorch.org/whl/cu121"
explicit = true

[tool.uv.sources]
torch = { index = "pytorch-cu121" }
torchaudio = { index = "pytorch-cu121" }
torchvision = { index = "pytorch-cu121" }
